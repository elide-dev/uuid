name: "Build"

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      os:
        required: true
        type: string
      label:
        required: true
        type: string
      flags:
        required: false
        type: string
        default: "--no-configuration-cache"
      java:
        required: false
        type: string
        default: 21
      coverage:
        required: false
        type: boolean
        default: true
      provenance:
        required: false
        type: boolean
        default: true
      push:
        required: false
        type: boolean
        default: false
      experimental:
        required: false
        type: boolean
        default: false
    secrets:
      SONAR_TOKEN:
        required: true
      CODECOV_TOKEN:
        required: true
      BUILDLESS_APIKEY:
        required: true

env:
  CI: "true"
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-XX:+UseParallelGC -Xmx3g -XX:MetaspaceSize=512M -XX:MaxMetaspaceSize=512M"
  GRADLE_CACHE_LOCAL: true
  GRADLE_CACHE_REMOTE: true
  GRADLE_CACHE_PUSH: true
  GRADLE_CACHE_USERNAME: apikey
  GRADLE_CACHE_PASSWORD: ${{ secrets.BUILDLESS_APIKEY }}
  CACHE_ENDPOINT: https://gradle.less.build/cache/generic/
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  TEST_EXCEPTIONS: true

permissions:
  contents: read

jobs:
  build:
    name: "Compile and Test"
    uses: elide-dev/build-infra/.github/workflows/jvm.gradle.yml@gradle-outputs
    secrets: inherit
    permissions:
      actions: "read"
      contents: "write"
      id-token: "write"
      checks: "write"
      pull-requests: "write"
    with:
      label: ${{ inputs.label }}
      runner: ${{ inputs.runner }}
      checks: true
      coverage: ${{ inputs.coverage }}
      provenance: ${{ inputs.provenance }}
      jvm: ${{ inputs.java }}
      action: "preMerge allTests apiCheck detekt"
      flags: "-PVERSION=1.0-SNAPSHOT --scan --no-daemon --warning-mode=none --dependency-verification=lenient -Pci=true ${{ inputs.flags }}"
      outputs: "./subprojects/uuid-core/build/libs/*.jar"
      reports_path: "./build/reports"
